-_-_-_-_-_-_-_-_-_-_-_-_--_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-

Overview
--------
The Json Parser app allows users to primarily search through twitter data in the form of json files. However with use of the created .tmpl and .expr files any json data can be parsed, searched and displayed however the user wishes. This documentation will mainly focus on these created files however basic functionality will be touched on.

User Options
------------
The user can do different kinds of searches on the data including word search, template word search, regex search and user search. Everything but user search can be fully customised by the user as will be explained in the following sections.

Templates (.tmpl)
-----------------
The templates section of the program allows the user to create and use pre-packed templates in order to display data in the way that they want. The user can use any of the values the dictionary and format in a way that they deem correct. Here is an example .tmpl file followed by an example output:

File - basic.tmpl
------------------------------------------------
Username : {user^name}
Location : {geoLocation^latitude} , {geoLocation^longitude} City - {place^name}
Tweet Text : {text}
------------------------------------------------

Output - basic.tmpl
------------------------------------------------
Username : Esperar Boutique
Location : 53.49084144 , -2.35122442 City - Salford
Tweet Text : ? CRUSHED VELVET ?

Our dreamy MIA Velvet Bardot Top will carry you straight through to summer!?? 
https://t.co/1jvG4nCM0j
------------------------------------------------

The .tmpl takes arguments in {} and the ^ symbol determines a sub dictionary. All fields can be looked up under the list attributes option on the start screen. Any symbol other than { and ^ is outputted normally with the values in the {} being parsed and put into the output. Templates are used throughout the entire program in order to help with readiblity and allows the user to display data how they want to.

Word Search and Word Templates
------------------------------
The user can search for either single words, or mutliple word (template). The user is able to add new Word Templates of their choice, however the program does come with some helpful starting templates.

Regex Search (.expr)
--------------------
Regular expressions are an extremely powerful tool and can be used to pick out precise data.The user is able to type in a regular expression and then it will go out and get all the matched data for that expression and output it in the selected .tmpl file of the users choice.

However I created another new file type alongside .tmpl, the Expression File (.expr). The.expr files simplify and allow users to save their expression. Below is an example of a .expr file:

File : emailExample.expr

{text} ^ [a-zA-Z0-9]+@[a-zA-Z0-9]*\.[com|gov|co\.uk|net]+
EXCEPT ^ {user:name} Education Matters; {user:name} Inspired Gymnastics;
INCLUDE ^ EXPRESSION; RESULT;

As seen above .expr files consist of 3 lines, the expression line (1), the EXCEPT line (2)and the INCLUDE line (3). The expression line starts with the field the user wants to search,encased in curly braces, in the example above the text field would be searched. This syntaxis the exact same as seen in the .tmpl files. The ^ is always placed before the argumentson all lines and on the expression line the Regex expression to be used follows.

The EXCEPT line specifies any records that should be ignored, in the above example any records that match the Regex expression, but have the username 'Education Matters' or 'Inspired Gymnastics' are ignored. The field to be ignored is again placed between {} and then each 'exception' is ends with a ; before the next argmuents begins.

Finally the INCLUDE can be used for debugging and to add extra details. Again before any arguments are passed the ^ is used. There are 3 values that can be 'INCLUDED'; EXPRESSION,RESULT and COUNTER. All three can be used at the same time and must be seperated with ;.
EXPRESSION - Prints out the Regular Expression used by the user.
RESULT - What the Regular Expression matched in the searched data.
COUNTER - The number of the current record.

User Search
-----------
User search allows the user to find out information about a specific user, such as number of tweets, number of sensitive tweets, followers etc.

